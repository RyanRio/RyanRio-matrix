{"version":3,"file":"index.js","sources":["../../src/lib/core/identityMatrix.ts","../../src/lib/core/zeros.ts","../../src/lib/core/ones.ts","../../src/lib/core/init.ts","../../src/lib/core/matrix.ts"],"sourcesContent":["import { Matrix, matrix } from './matrix';\r\n\r\nexport function identityMatrix(rows: number, cols: number): Matrix {\r\n    const elements: number[][] = [];\r\n    let zeroIterator = 0;\r\n    for (let i = 0; i < rows; i++) {\r\n        const row: number[] = [];\r\n        for (let j = 0; j < cols; j++) {\r\n            let value;\r\n            if (zeroIterator % (rows + 1) === 0) {\r\n                value = 1;\r\n            }\r\n            else {\r\n                value = 0;\r\n            }\r\n            row.push(value);\r\n            zeroIterator++;\r\n        }\r\n        elements.push(row);\r\n    }\r\n    return matrix(elements);\r\n}\r\n","import { Matrix } from './matrix';\r\nimport { init } from './init';\r\n\r\n/**\r\n * Returns a matrix with each element as a zero\r\n * @param rows number of rows\r\n * @param cols number of columns\r\n */\r\nexport function zeros(rows: number, cols: number): Matrix {\r\n    return init(rows, cols, 0);\r\n}\r\n","import { Matrix } from './matrix';\r\nimport { init } from './init';\r\n\r\n/**\r\n * Returns a matrix with each element as a one\r\n * @param rows number of rows\r\n * @param cols number of columns\r\n */\r\nexport function ones(rows: number, cols: number): Matrix {\r\n    return init(rows, cols, 1);\r\n}\r\n","import { Matrix } from './matrix';\r\nimport { matrix } from './matrix';\r\n\r\nexport function init(rows: number, cols: number, value: number): Matrix {\r\n    const elements: number[][] = [];\r\n    for (let i = 0; i < rows; i++) {\r\n        const row: number[] = [];\r\n        for (let j = 0; j < cols; j++) {\r\n            row.push(value);\r\n        }\r\n        elements.push(row);\r\n    }\r\n    return matrix(elements);\r\n}\r\n","export interface Matrix {\r\n    readonly rows: number;\r\n    readonly cols: number;\r\n    getElement(row: number, column: number): number;\r\n    __add__(rhs: any): Matrix | undefined;\r\n    __determinant__(): number | undefined;\r\n    __minorMatrix__(): Matrix | null;\r\n    __cofactorMatrix__(): Matrix | undefined;\r\n    __transpose__(): Matrix | undefined;\r\n    __scalar__(toscalar: number): Matrix | undefined;\r\n    toString(): string;\r\n    __inverse__(): Matrix | undefined;\r\n    square?: boolean;\r\n}\r\n\r\nfunction computeColumns(elements: number[][]): number {\r\n    for (const row of elements) {\r\n        return row.length;\r\n    }\r\n    throw new Error(\"elements must contain at least one row.\");\r\n}\r\n\r\nfunction add(lhs: Matrix, rhs: Matrix): Matrix {\r\n    const rows = lhs.rows;\r\n    const cols = lhs.cols;\r\n    const elements: number[][] = [];\r\n    for (let i = 0; i < rows; i++) {\r\n        const row: number[] = [];\r\n        for (let j = 0; j < cols; j++) {\r\n            row.push(lhs.getElement(i + 1, j + 1) + rhs.getElement(i + 1, j + 1));\r\n        }\r\n        elements.push(row);\r\n    }\r\n    return matrix(elements);\r\n}\r\n\r\n\r\nfunction minorMatrix(input: Matrix): Matrix {\r\n    const elements: number[][] = [];\r\n    const rows = input.rows;\r\n    const cols = input.cols;\r\n    for (let i = 0; i < rows; i++) {\r\n        const row: number[] = [];\r\n        for (let j = 0; j < cols; j++) {\r\n            const dMatrix = setupDeterminant(input, j, i);\r\n            if (dMatrix) {\r\n                const value = dMatrix.__determinant__();\r\n                if (value) row.push(value);\r\n            }\r\n\r\n        }\r\n        elements.push(row);\r\n    }\r\n    return matrix(elements);\r\n}\r\n\r\n/**\r\n * Applies a checkerboard of minuses.\r\n * Should always operate on a matrix of minors to be technically called a cofactor matrix\r\n * @param input\r\n */\r\nfunction cofactorMatrix(input: Matrix): Matrix {\r\n    const elements: number[][] = [];\r\n    const rows = input.rows;\r\n    const cols = input.cols;\r\n    let oddoneout = 1;\r\n    for (let i = 0; i < rows; i++) {\r\n        const row: number[] = [];\r\n        for (let j = 0; j < cols; j++) {\r\n            let value = input.getElement(i + 1, j + 1);\r\n            if (oddoneout % 2 === 0) {\r\n                value = value * -1;\r\n            }\r\n            row.push(value);\r\n            oddoneout++;\r\n        }\r\n        elements.push(row);\r\n    }\r\n    return matrix(elements);\r\n}\r\n\r\nexport function setupDeterminant(toSet: Matrix, ignoreColumn: number, ignoreRow?: number): Matrix | undefined {\r\n    if (toSet.square === false) {\r\n        return undefined;\r\n    }\r\n    else {\r\n        if (ignoreRow === undefined) {\r\n            ignoreRow = 0;\r\n        } // always ignore row 0\r\n\r\n        const elements: number[][] = [];\r\n        for (let rowIterator = 0; rowIterator < toSet.rows; rowIterator++) {\r\n            const row: number[] = [];\r\n\r\n            if (rowIterator !== ignoreRow) {\r\n                for (let columnIterator = 0; columnIterator < toSet.cols; columnIterator++) {\r\n                    if (columnIterator !== ignoreColumn) {\r\n                        row.push(toSet.getElement(rowIterator + 1, columnIterator + 1));\r\n                    }\r\n                }\r\n                elements.push(row);\r\n            }\r\n\r\n\r\n        }\r\n        return matrix(elements);\r\n    }\r\n\r\n}\r\n\r\nfunction determinant(input: Matrix): number {\r\n\r\n    const rows = input.rows;\r\n    const cols = input.cols;\r\n    let determinantValue = 0;\r\n    /**\r\n     * When the matrix gets down to 2 rows and 2 columns\r\n     */\r\n    if (rows === 2 && cols === 2) {\r\n        determinantValue = (input.getElement(1, 1) * input.getElement(2, 2)) - (input.getElement(2, 1) * input.getElement(1, 2));\r\n        return determinantValue;\r\n    }\r\n    /**\r\n     * recursively achieve a 2 row and 2 column matrix\r\n     */\r\n    else if (rows === cols) {\r\n        for (let i = 0; i < cols; i++) {\r\n            if (i % 2 === 0) {\r\n                let dMatrix = setupDeterminant(input, i);\r\n                if (dMatrix) {\r\n                    determinantValue = determinantValue + (input.getElement(1, i + 1) * determinant(dMatrix));\r\n                }\r\n            }\r\n            else {\r\n                let dMatrix = setupDeterminant(input, i);\r\n                if (dMatrix) {\r\n                    determinantValue = determinantValue - (input.getElement(1, i + 1) * determinant(dMatrix));\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n    return determinantValue;\r\n\r\n}\r\n\r\nfunction transpose(input: Matrix): Matrix {\r\n    const rows = input.rows;\r\n    const cols = input.cols;\r\n\r\n    const elements: number[][] = [];\r\n\r\n    // Reverse rows and columns\r\n    for (let i = 0; i < cols; i++) {\r\n        const row: number[] = [];\r\n\r\n        for (let j = 0; j < rows; j++) {\r\n            row.push(input.getElement(j + 1, i + 1));\r\n        }\r\n        elements.push(row);\r\n    }\r\n\r\n    return matrix(elements);\r\n}\r\n\r\nfunction inverse(input: Matrix): Matrix {\r\n    const determinant = input.__determinant__();\r\n    const minorMatrix = input.__minorMatrix__();\r\n    if (minorMatrix) {\r\n        const cofactorMatrix = minorMatrix.__cofactorMatrix__();\r\n        if (cofactorMatrix) {\r\n            const adjugateMatrix = cofactorMatrix.__transpose__();\r\n            if (adjugateMatrix && determinant) {\r\n                const inverseMatrix = adjugateMatrix.__scalar__(1.0 / determinant);\r\n                if (inverseMatrix) {\r\n                    return inverseMatrix;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    throw new Error(\"Failed\");\r\n\r\n\r\n}\r\n\r\nfunction scalar(lhs: Matrix, scalar: number) {\r\n    const rows = lhs.rows;\r\n    const cols = lhs.cols;\r\n    const elements: number[][] = [];\r\n    for (let i = 0; i < rows; i++) {\r\n        const row: number[] = [];\r\n        for (let j = 0; j < cols; j++) {\r\n            row.push(lhs.getElement(i + 1, j + 1) * scalar);\r\n        }\r\n        elements.push(row);\r\n    }\r\n    return matrix(elements);\r\n}\r\nexport function matrix(elements: number[][]): Matrix {\r\n    const rows = elements.length;\r\n    const cols = computeColumns(elements);\r\n    let square: boolean;\r\n    if (rows === cols) {\r\n        square = true;\r\n    }\r\n    function getElement(row: number, column: number): number {\r\n        return elements[row - 1][column - 1];\r\n    }\r\n\r\n    function toString(): string {\r\n        return elements.map(function (row) { return row.join(\", \"); }).join(\"\\n\");\r\n    }\r\n\r\n    const m: Matrix = {\r\n        rows,\r\n        cols,\r\n        getElement,\r\n        toString,\r\n        __add__(rhs: Matrix) {\r\n            return add(m, rhs);\r\n        },\r\n        __determinant__() {\r\n            if (m.square === true) {\r\n                return determinant(m);\r\n            }\r\n            else {\r\n                return NaN;\r\n            }\r\n        },\r\n        __minorMatrix__() {\r\n            if (m.square === true) {\r\n                return minorMatrix(m);\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n\r\n        },\r\n        __cofactorMatrix__() {\r\n            if (m.square === true) {\r\n                return cofactorMatrix(m);\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n\r\n        },\r\n        __transpose__() {\r\n            if (m.square === true) {\r\n                return transpose(m);\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n\r\n        },\r\n        __scalar__(toscalar: number) {\r\n            return scalar(m, toscalar);\r\n        },\r\n        __inverse__() {\r\n            if (m.square === true) {\r\n                return inverse(m);\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n\r\n        },\r\n        get square() {\r\n            if (square) {\r\n                return square;\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n        }\r\n    };\r\n    return m;\r\n}\r\n"],"names":[],"mappings":"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"}